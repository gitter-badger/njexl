x = 0 
#atomic{
   x = 2 + 2    
}

#atomic{
   x = 10
   t = p // error, x should revert back to 4
}

def func(t){
    write('%s with %s\n', __args__[0].id , #def t )
}
threads = list{ thread{ func($) }() }( [0:10] )

while( true ){
   all_expired = select{  $.isAlive }(threads)
   break( empty(all_expired) )
}
// basically there was no error as of now ...

return x == 4  

