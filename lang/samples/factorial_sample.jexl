/*
  The iterative version of the factorial
*/
def factorial_iterative ( n ){
    if ( n <= 0 ){
        return 1
    }
    x = 1
    while ( n > 0 ){
        x = x * n
        n -= 1  
    }
    return x
}
/*
   Recursive version of the factorial
*/
def factorial_recursive(n){
    if ( n <= 0 ) {
        return 1
    } else {
        return n * my:factorial_recursive(n-1)
    }
}

size(__args__) > 1 or bye ( 'usage : ' + __args__[0] + '  <number> [-r : recursively]')

if ( size( __args__) == 2 ){
    y = factorial_iterative( __args__[1] )
}else {
   y = factorial_recursive( __args__[1] )
}
write(y)
